// COPYRIGHT Â© 2018 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/4.9/esri/copyright.txt for details.

define(["require","exports","../../core/unitUtils","../../core/wgs84Constants","../Point","../Polygon","../Polyline","../SpatialReference"],function(e,t,a,r,n,s,i,o){function h(e,t,a,s){for(var i,h,c,M,u=r.wgs84Radius,l=r.wgs84PolarRadius,f=r.wgs84Flattening,g=Math.sin(a),v=Math.cos(a),p=(1-f)*Math.tan(e),d=1/Math.sqrt(1+p*p),w=p*d,y=Math.atan2(p,v),m=d*g*(d*g),R=1-m,P=R*(u*u-l*l)/(l*l),S=1+P/16384*(4096+P*(P*(320-175*P)-768)),D=P/1024*(256+P*(P*(74-47*P)-128)),G=s/(l*S),q=2*Math.PI;Math.abs(G-q)>1e-12;)c=Math.cos(2*y+G),i=Math.sin(G),h=Math.cos(G),M=D*i*(c+D/4*(h*(2*c*c-1)-D/6*c*(4*i*i-3)*(4*c*c-3))),q=G,G=s/(l*S)+M;var I=w*i-d*h*v,W=Math.atan2(w*h+d*i*v,(1-f)*Math.sqrt(m+I*I)),x=Math.atan2(i*g,d*h-w*i*v),z=f/16*R*(4+f*(4-3*R)),E=x-(1-z)*f*Math.sqrt(m)*(G+z*i*(c+z*h*(2*c*c-1))),b=W/(Math.PI/180),A=(t+E)/(Math.PI/180);return new n(A,b,new o({wkid:4326}))}function c(e,t,a,n){var s,i,o,h,c,M,u,l,f,g,v=r.wgs84Radius,p=r.wgs84PolarRadius,d=r.wgs84Flattening,w=n-t,y=Math.atan((1-d)*Math.tan(e)),m=Math.atan((1-d)*Math.tan(a)),R=Math.sin(y),P=Math.cos(y),S=Math.sin(m),D=Math.cos(m),G=1e3,q=w;do{if(u=Math.sin(q),l=Math.cos(q),0===(o=Math.sqrt(D*u*(D*u)+(P*S-R*D*l)*(P*S-R*D*l))))return{geodesicDistance:0};c=R*S+P*D*l,M=Math.atan2(o,c),f=P*D*u/o,i=1-f*f,h=c-2*R*S/i,isNaN(h)&&(h=0),g=d/16*i*(4+d*(4-3*i)),s=q,q=w+(1-g)*d*f*(M+g*o*(h+g*c*(2*h*h-1)))}while(Math.abs(q-s)>1e-12&&--G>0);if(0===G){var I=6371009*Math.acos(Math.sin(e)*Math.sin(a)+Math.cos(e)*Math.cos(a)*Math.cos(n-t)),W=n-t,x=Math.sin(W)*Math.cos(a),z=Math.cos(e)*Math.sin(a)-Math.sin(e)*Math.cos(a)*Math.cos(W);return{geodesicDistance:I,azimuth:Math.atan2(x,z)}}var E=i*(v*v-p*p)/(p*p),b=1+E/16384*(4096+E*(E*(320-175*E)-768)),A=E/1024*(256+E*(E*(74-47*E)-128));return{geodesicDistance:p*b*(M-A*o*(h+A/4*(c*(2*h*h-1)-A/6*h*(4*o*o-3)*(4*h*h-3)))),azimuth:Math.atan2(D*Math.sin(q),P*S-R*D*Math.cos(q)),reverseAzimuth:Math.atan2(P*Math.sin(q),P*S*Math.cos(q)-R*D)}}function M(e,t){if("polyline"!==e.type&&"polygon"!==e.type){var a="geodesicDensify: the input geometry is neither polyline nor polygon";throw console.error(a),new Error(a)}if(!e.spatialReference.isWGS84){var a="geodesicDensify: the input geometry must use the WGS84 spatial reference";throw console.error(a),new Error(a)}var r=Math.PI/180;t<637.100877151506&&(t=637.100877151506);for(var n="polyline"===e.type?e.paths:e.rings,o=[],M=0,u=n;M<u.length;M++){var l=u[M],f=[];o.push(f),f.push([l[0][0],l[0][1]]);for(var g=l[0][0]*r,v=l[0][1]*r,p=void 0,d=void 0,w=0;w<l.length-1;w++)if(p=l[w+1][0]*r,d=l[w+1][1]*r,g!==p||v!==d){var y=c(v,g,d,p),m=y.azimuth,R=y.geodesicDistance,P=R/t;if(P>1){for(var S=1;S<=P-1;S++){var D=S*t,G=h(v,g,m,D);f.push([G.x,G.y])}var q=(R+Math.floor(P-1)*t)/2,I=h(v,g,m,q);f.push([I.x,I.y])}var W=h(v,g,m,R);f.push([W.x,W.y]),g=W.x*r,v=W.y*r}}return"polyline"===e.type?new i({paths:o,spatialReference:e.spatialReference}):new s({rings:o,spatialReference:e.spatialReference})}function u(e,t){if(e.some(function(e){return!e.spatialReference.isWGS84})){var r="geodesicLengths: the input geometries must use the WGS84 spatial reference";throw console.error(r),new Error(r)}for(var n=Math.PI/180,s=[],i=0;i<e.length;i++){for(var o=e[i].paths,h=0,M=0;M<o.length;M++){for(var u=o[M],l=0,f=1;f<u.length;f++){var g=u[f-1][0]*n,v=u[f][0]*n,p=u[f-1][1]*n,d=u[f][1]*n;if(p!==d||g!==v){l+=c(p,g,d,v).geodesicDistance}}h+=l}h=a.convertUnit(h,"meters",t),s.push(h)}return s}function l(e,t){if(e.some(function(e){return!e.spatialReference.isWGS84})){var r="geodesicAreas: the input geometries must use the WGS84 spatial reference";throw console.error(r),new Error(r)}for(var n=[],s=0;s<e.length;s++){var i=e[s],o=M(i,1e4);n.push(o)}for(var h=[],c=0;c<n.length;c++){for(var u=n[c].rings,l=0,p=0;p<u.length;p++){var d=u[p];f(g,d[0]),f(v,d[d.length-1]);for(var w=v[0]*g[1]-g[0]*v[1],y=0;y<d.length-1;y++)f(g,d[y+1]),f(v,d[y]),w+=v[0]*g[1]-g[0]*v[1];l+=w}l=a.convertUnit(l,"square-meters",t),h.push(l/-2)}return h}function f(e,t){var a=Math.PI/180,n=r.wgs84Radius,s=.006694379990197414,i=.0818191908429643,o=Math.sin(t[1]*a),h=(1-s)*(o/(1-s*(o*o))-1/(2*i)*Math.log((1-i*o)/(1+i*o))),c=n*t[0]*a,M=n*h*.5;return e[0]=c,e[1]=M,e}Object.defineProperty(t,"__esModule",{value:!0}),t.directGeodeticSolver=h,t.inverseGeodeticSolver=c,t.geodesicDensify=M,t.geodesicLengths=u;var g=[0,0],v=[0,0];t.geodesicAreas=l});